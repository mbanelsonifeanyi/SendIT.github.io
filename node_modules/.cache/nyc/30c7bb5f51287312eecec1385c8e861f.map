{"version":3,"sources":["api.spec.js"],"names":["describe","it","done","app","get","expect","end","post","send","userName","userEmail","parcelName","put"],"mappings":";;AAAA;;;;AACA;;AACA;;;;;;AACAA,SAAU,iBAAV,EAA6B,YAAO;AAChCC,OAAI,yCAAJ,EAA+C,UAAEC,IAAF,EAAY;AACvD,iCAASC,aAAT,EAAeC,GAAf,CAAmB,cAAnB,EAAmCC,MAAnC,CAA2C,GAA3C,EAAiDC,GAAjD,CAAsDJ,IAAtD;AACH,KAFD;AAGAD,OAAI,iDAAJ,EAAuD,UAAEC,IAAF,EAAY;AAC/D,iCAASC,aAAT,EAAeC,GAAf,CAAmB,gBAAnB,EAAqCC,MAArC,CAA6C,GAA7C,EAAmDC,GAAnD,CAAwDJ,IAAxD;AACH,KAFD;AAGAD,OAAG,4DAAH,EAAiE,UAACC,IAAD,EAAS;AACtE,iCAAQC,aAAR,EAAaC,GAAb,CAAiB,iBAAjB,EAAoCC,MAApC,CAA2C,GAA3C,EAAgDC,GAAhD,CAAoDJ,IAApD;AACH,KAFD;AAGAD,OAAI,+CAAJ,EAAqD,UAAEC,IAAF,EAAY;AAC7D,iCAASC,aAAT,EAAeC,GAAf,CAAmB,sBAAnB,EAA2CC,MAA3C,CAAmD,GAAnD,EAAyDC,GAAzD,CAA8DJ,IAA9D;AACH,KAFD;AAGAD,OAAG,iDAAH,EAAsD,UAACC,IAAD,EAAU;AAC5D,iCAAQC,aAAR,EAAaC,GAAb,CAAiB,wBAAjB,EAA2CC,MAA3C,CAAkD,GAAlD,EAAuDC,GAAvD,CAA2DJ,IAA3D;AACH,KAFD;AAGAD,OAAI,mDAAJ,EAAyD,UAAEC,IAAF,EAAY;AACjE,iCAASC,aAAT,EACCI,IADD,CACM,cADN,EAECC,IAFD,CAEO,EAAEC,UAAU,YAAZ,EAA0BC,WAAW,OAArC,EAA8CC,YAAW,KAAzD,EAFP,EAGCN,MAHD,CAGS,GAHT,EAICC,GAJD,CAIMJ,IAJN;AAKH,KAND;AAOAD,OAAI,4CAAJ,EAAkD,UAACC,IAAD,EAAU;AACxD,iCAAQC,aAAR,EAAaI,IAAb,CAAkB,cAAlB,EAAkCF,MAAlC,CAAyC,GAAzC,EAA8CC,GAA9C,CAAkDJ,IAAlD;AACH,KAFD;AAGAD,OAAI,8CAAJ,EAAoD,UAAEC,IAAF,EAAY;AAC5D,iCAASC,aAAT,EACCS,GADD,CACK,uBADL,EAECP,MAFD,CAES,GAFT,EAGCC,GAHD,CAGMJ,IAHN;AAIH,KALD;AAMAD,OAAG,oDAAH,EAAyD,UAACC,IAAD,EAAU;AAC/D,iCAAQC,aAAR,EAAaS,GAAb,CAAiB,wBAAjB,EAA2CP,MAA3C,CAAkD,GAAlD,EAAuDC,GAAvD,CAA2DJ,IAA3D;AACH,KAFD;AAIH,CApCD","file":"api.spec.js","sourceRoot":"E:/SendIT/SendIT-master/mbanelsonifeanyi.github.io/server/test","sourcesContent":["import request from  'supertest'\nimport { expect }  from 'chai'\nimport app from '../app';\ndescribe( 'SendITResources', ( ) => { \n    it( 'should show all parcels in the database', ( done ) => {\n        request( app ).get('/api/parcels').expect( 200 ).end( done )\n    } )\n    it( 'should get the parcels with a specific parcelId', ( done ) => {\n        request( app ).get('/api/parcels/1').expect( 200 ).end( done )\n    } )\n    it('should return a status code of 404 for an invalid parcelId', (done) =>{\n        request(app).get('/api/parcels/87').expect(404).end(done);\n    })\n    it( 'should get the parcels with a specific userId', ( done ) => {\n        request( app ).get('/api/users/1/parcels').expect( 200 ).end( done )\n    } )\n    it('Should return status of 404 for a wrong User Id', (done) => {\n        request(app).get('/api/users/999/parcels').expect(404).end(done)\n    })\n    it( 'should add a delivery order to all delvery orders', ( done ) => {\n        request( app )\n        .post('/api/parcels')\n        .send( { userName: 'something1', userEmail: 'time1', parcelName:'jjj' } )\n        .expect( 201 )\n        .end( done )\n    } )\n    it ('Should return errors for empty post fields', (done) => {\n        request(app).post('/api/parcels').expect(400).end(done);\n    })\n    it( 'should modify the status of a delivery order', ( done ) => {\n        request( app )\n        .put('/api/parcels/1/cancel')\n        .expect( 200 )\n        .end( done )\n    } )\n    it('Should return status of 404 for an wrong parcel Id', (done) => {\n        request(app).put('/api/parcels/98/cancel').expect(404).end(done);\n    })\n    \n})"]}